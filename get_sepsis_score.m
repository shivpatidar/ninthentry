function [scores, labels]  = get_sepsis_score(rawdata,model)
%UNTITLED Summary of this function goes here
%   Detailed explanation goes here



data=rawdata(:,[1:36 39:40]);

xxx=find(data(:,4)<data(:,6));

for ii=1:length(xxx)
    uu=data(xxx(ii),4);
    vv=data(xxx(ii),6);
    data(xxx(ii),6)=uu;
    data(xxx(ii),4)=vv;
end

[data] = fillthenans1(data);
data(isnan(data))=0;
feat=propfeat(data);
data1=[data(end,:) feat];

%model1
x=[5,4,4,6,-2,2,-1,4,8,0,8,4,0,1,2,7,6,0,-2,-3,-1,0,2,5,4,2,5,3,3,-1,3,7,4,2,7,1,-2,-1,4,4,3,2,1,0,1,0,1,1,0,1,0,0,1,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,0,383];
power = x(1:42);
data2=data1.^power;
[labels1,scores1] = predict(model{1},[data1 data1(:,1)./(data1(:,4).*data1(:,35)) data2(:,logical(x(42+1:end-1))) ]);

%model2
CC=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,30,30,30,30,30,30,30,30,31,31,31,31,31,32,32,32,32,33,33,33,33,34,34,34,34,34,34,35,35,35,36,36,36,36,36,37,37,37,39,39;4,7,12,13,14,15,18,19,20,21,22,23,24,26,27,31,36,37,38,40,41,42,3,4,6,9,12,13,17,21,22,23,24,25,29,31,35,36,39,40,41,4,5,7,10,11,12,13,15,16,18,20,22,23,28,30,34,35,36,38,39,40,7,9,11,12,14,15,18,22,24,25,27,28,29,30,31,40,42,6,7,8,9,10,11,12,13,15,16,17,19,23,24,26,30,31,32,37,38,40,8,9,10,11,12,15,16,19,20,21,24,28,30,31,32,33,35,36,37,39,8,14,15,16,17,18,19,23,26,28,29,30,32,34,35,36,37,38,39,41,42,10,12,14,15,17,18,20,21,28,29,30,34,35,38,39,41,11,16,18,19,23,24,25,29,30,32,33,34,35,36,14,16,19,20,23,24,25,27,28,30,31,32,33,36,37,38,40,13,15,16,17,20,21,22,23,26,29,31,32,34,39,20,21,22,25,26,27,28,29,35,38,39,40,41,42,14,17,19,22,23,28,29,34,36,37,38,42,17,20,21,23,24,25,26,27,28,29,30,32,34,35,36,40,17,18,20,21,25,26,31,33,34,35,36,18,20,21,23,26,31,32,33,34,35,37,42,18,19,20,21,23,24,25,26,28,32,33,34,37,38,41,42,19,21,22,23,24,25,26,28,34,36,39,42,24,26,27,28,29,30,31,33,37,38,39,42,22,24,25,26,28,32,34,38,39,40,41,42,22,24,27,29,30,35,37,38,40,41,24,25,27,29,32,35,36,37,41,42,25,26,27,30,31,35,36,37,39,40,25,28,30,31,34,37,38,39,40,41,26,27,28,30,31,33,35,37,39,40,33,34,36,38,42,29,30,32,33,35,36,37,38,41,29,30,31,33,35,36,37,40,41,31,33,36,38,39,41,31,32,33,34,36,37,38,40,32,34,38,39,42,33,34,37,40,37,38,39,42,36,37,38,39,40,41,38,41,42,37,39,40,41,42,39,41,42,41,42];
testratio=data1(:,CC(1,:))./data1(:,CC(2,:));
power2=[2,-3,-2,3,-8,6,6,-8,2,-1,-3,-1,-1,8,-3,-2,7,-3,8,-7,-5,-1,8,1,-4,-3,-7,3,2,9,1,-4,-8,4,1,4,6,-7,-3,-2,3,-6,1,-6,-1,5,7,2,-5,-7,-5,-6,-6,1,7,-8,2,5,-3,9,-5,-1,-2,4,-6,-7,-1,0,8,0,-5,-6,-3,-1,4,4,-2,-6,-1,3,1,7,6,-4,7,-9,6,-5,7,9,6,-5,2,-2,-8,6,-8,-6,6,-9,-8,-1,4,1,5,3,-1,6,-3,4,-7,-7,-3,8,-4,-1,-9,1,3,-2,8,-6,3,0,8,-5,4,8,-2,2,-3,1,2,-1,-6,1,8,0,-1,-5,-1,5,1,4,-2,7,4,-7,-1,-1,6,6,0,8,2,-3,5,-1,-9,2,6,4,3,0,-2,1,7,-3,-3,6,5,8,1,-4,3,-3,-2,-3,-5,-1,-1,-3,-5,-7,-8,-7,5,2,-5,2,5,-8,1,-9,-6,8,1,-1,4,-3,-4,-6,-7,-8,0,-1,-2,8,6,7,9,-5,-8,-8,-5,9,-8,-4,9,-4,-1,-2,5,-2,-3,6,-3,-1,7,-6,-2,-5,-3,-2,9,8,-6,-4,-1,4,-8,-1,8,1,2,-9,-8,2,5,2,-4,-2,4,-7,-4,-6,-7,-9,7,-9,7,-5,-5,4,5,-5,-6,4,2,-6,-7,-5,-5,5,3,7,1,-7,-2,-7,7,0,5,-2,5,-2,3,-1,8,1,1,-3,-6,1,-4,-1,5,-3,5,-1,9,2,-1,-4,-3,-3,-7,5,2,-8,-1,-4,1,-6,5,-8,0,1,-6,-6,-1,-4,-4,-8,7,0,2,4,-7,1,4,-3,-1,6,-1,0,-5,-2,3,0,-1,4,-2,-7,6,5,-3,2,-1,7,0,6,1,1,-4,9,0,-9,8,-4,-6,-4,4,8,7,-2,-6,2,-6,4,4,3,-1,-8,6,-4,-4,-5,-8,3,-7,-2,-5,3,-1,2,-4,6,-3,-4,6,6,-4,9,-7,8,1,-8,-6,-7,5,-5,-4,4,-3,7,5,-7,1,-5,-3,3,-4,8,6,-8,8,5,-1,-4,3,-2,-8,-2,9,-7,-4,0,-3,-4,4,7,-6,-6,-4,1,-4,0];
[labels2,scores2]= predict(model{2}, testratio.^power2);
[labels,idx]=max([labels1 labels2   ],[],2);
scorecombine=[scores1(:,2) scores2(:,2)];
scores=scorecombine(:,idx)./10;

 
end





function [outputdata] = fillthenans1(inputdata)
 outputdataf=[];
 if(size(inputdata,1)==1)
     outputdataf=inputdata;
 else
        
        for uu=1:38
        datata=fillmissing(inputdata(:,uu)','linear',2,'EndValues','nearest');
        outputdataf(:,uu)=datata';
        end
    
 end
outputdata=outputdataf(end,:);

end

function feat=propfeat(data)

feat11=data(:,1)./(data(:,35).^2);%correct
feat12=data(:,6)./(data(:,36).^2);
feat13=data(:,8)./(data(:,31).^2);
feat14=data(:,35)./(data(:,36).^2);
feat=[feat11 feat12 feat13 feat14  ];
feat(isinf(feat))=100;



end

